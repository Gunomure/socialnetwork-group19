apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: example-ingress
  namespace: group19-prod
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /$1/$2
#    ===============TIMEOUT==============================
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
#    ===============CORS==============================
#    nginx.ingress.kubernetes.io/enable-cors: "true"
#    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS"
#    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
#    nginx.ingress.kubernetes.io/configuration-snippet: |
#      add_header Access-Control-Allow-Origin $http_origin;
#      add_header Access-Control-Allow-Methods "POST, GET, OPTIONS";
#      add_header Access-Control-Allow-Credentials true;
#      proxy_read_timeout 300;
#      proxy_connect_timeout 300;

spec:
  rules:
    - host: ingress
      http:
        paths: # пути сортируются кубером в порядке уменьшения длины
          - path: /prod/(socket.io)/(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: backend-service
                port:
                  number: 9092
          - path: /prod/(api)/(.*)
            pathType: Prefix
            backend:
              service:
                name: backend-service
                port:
                  number: 8086